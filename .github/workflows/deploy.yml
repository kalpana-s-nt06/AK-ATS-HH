name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ "main" ]   # Change branch if needed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Build project (Vite)
      - name: Build project
        run: npm run build

      # Step 5: Ensure target directory exists on EC2
      - name: Ensure target directory exists
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            mkdir -p /var/www/ats-backups/frontend/dist
            sudo chown -R ubuntu:ubuntu /var/www/ats-backups/frontend
            sudo chmod -R 755 /var/www/ats-backups/frontend

      # Step 6: Backup current dist BEFORE copying new files
      - name: Backup current dist
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
            BACKUP_DIR="/var/www/ats-backups/frontend"

            sudo mkdir -p $BACKUP_DIR/logs

            if [ -d /home/ubuntu/frontend/dist ]; then
              sudo cp -r /home/ubuntu/frontend/dist $BACKUP_DIR/dist-$TIMESTAMP
              echo "$(date): ✅ Backup created at $BACKUP_DIR/dist-$TIMESTAMP" | sudo tee -a $BACKUP_DIR/logs/deploy.log
            else
              echo "$(date): ⚠️ No existing dist folder found. Skipping backup." | sudo tee -a $BACKUP_DIR/logs/deploy.log
            fi

      # Step 7: Copy new build to EC2
      - name: Copy build to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "dist/*"
          target: "/home/ubuntu/frontend/dist/"
          overwrite: true
          rm: false

      # Step 8: Reload Nginx
      - name: Reload Nginx on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo nginx -t
            sudo systemctl reload nginx
            echo "✅ Frontend deployment completed successfully"
